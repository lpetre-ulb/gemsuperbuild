--- a/benchmark/mstreamio2g/Makefile
+++ b/benchmark/mstreamio2g/Makefile
@@ -93,7 +93,7 @@
 
 TestLibraries=
 TestExecutables=
-DependentLibraries += boost_thread-mt
+DependentLibraries += boost_thread
 
 include $(XDAQ_ROOT)/$(BUILD_SUPPORT)/Makefile.rules
 include $(XDAQ_ROOT)/$(BUILD_SUPPORT)/mfRPM.rules
--- a/hyperdaq/src/common/Application.cc
+++ b/hyperdaq/src/common/Application.cc
@@ -849,7 +849,7 @@
 		soapURN << "urn:xdaq-application:lid=" << toolbox::toString("%d", d->getLocalId());
 
 		std::stringstream xhttpURL;
-		xhttpURL << soapURL << "/" << soapURN;
+		xhttpURL << soapURL << "/" << soapURN.rdbuf();
 
 		std::stringstream applicationlink;
 		applicationlink << "<a href=\"" << xhttpURL.str() << "\">" << d->getClassName() << "</a>";
--- a/tcpla/src/common/InterfaceAdapterPoll.cc
+++ b/tcpla/src/common/InterfaceAdapterPoll.cc
@@ -46,7 +46,7 @@
 	catch (toolbox::task::exception::Exception& e)
 	{
 		std::stringstream ss;
-		ss << "Failed to submit workloop in " << name;
+		ss << "Failed to submit workloop in " << name.rdbuf();
 		//XCEPT_DECLARE_NESTED(tcpla::exception::WorkLoopSubmitFailed, ex, ss.str(), e);
 		XCEPT_RETHROW(tcpla::exception::Exception, ss.str(), e);
 	}
--- a/tcpla/src/common/InterfaceAdapterSelect.cc
+++ b/tcpla/src/common/InterfaceAdapterSelect.cc
@@ -56,7 +56,7 @@
 	catch (toolbox::task::exception::Exception& e)
 	{
 		std::stringstream ss;
-		ss << "Failed to submit workloop in " << name;
+		ss << "Failed to submit workloop in " << name.rdbuf();
 		//XCEPT_DECLARE_NESTED(tcpla::exception::WorkLoopSubmitFailed, ex, ss.str(), e);
 		XCEPT_RETHROW(tcpla::exception::Exception, ss.str(), e);
 	}
--- a/tcpla/src/common/PublicServicePointPoll.cc
+++ b/tcpla/src/common/PublicServicePointPoll.cc
@@ -54,7 +54,7 @@
 	catch (toolbox::task::exception::Exception& e)
 	{
 		std::stringstream ss;
-		ss << "Failed to submit workloop " << name;
+		ss << "Failed to submit workloop " << name.rdbuf();
 		//XCEPT_DECLARE_NESTED(tcpla::exception::WorkLoopSubmitFailed, ex, ss.str(), e);
 		XCEPT_RETHROW(tcpla::exception::Exception, ss.str(), e);
 	}
--- a/tcpla/src/common/PublicServicePointSelect.cc
+++ b/tcpla/src/common/PublicServicePointSelect.cc
@@ -60,7 +60,7 @@
 	catch (toolbox::task::exception::Exception& e)
 	{
 		std::stringstream ss;
-		ss << "Failed to submit workloop " << name;
+		ss << "Failed to submit workloop " << name.rdbuf();
 		//XCEPT_DECLARE_NESTED(tcpla::exception::WorkLoopSubmitFailed, ex, ss.str(), e);
 		XCEPT_RETHROW(tcpla::exception::Exception, ss.str(), e);
 	}
--- a/xdaq/src/common/Network.cc
+++ b/xdaq/src/common/Network.cc
@@ -30,7 +30,7 @@
 
 xdaq::Network::~Network()
 {
-	std::map<const xdaq::ContextDescriptor*, xdaq::Endpoint*, std::less<xdaq::ContextDescriptor*> >::iterator i;
+	std::map<const xdaq::ContextDescriptor*, xdaq::Endpoint*, std::less<const xdaq::ContextDescriptor*> >::iterator i;
 	for (i = endpoints_.begin(); i != endpoints_.end(); i++)
 	{
 		delete (*i).second;
--- a/xdata/src/common/csv/BagSerializer.cc
+++ b/xdata/src/common/csv/BagSerializer.cc
@@ -27,7 +27,7 @@
 	while (i != b->end())
 	{
 		xdata::Serializable* var = (*i).second;		
-		dynamic_cast<xdata::csv::Serializer*>(serializer)->exportAll(var, f);
+		dynamic_cast<xdata::csv::Serializer*>(serializer)->exportAll(var, bool(f));
 		
 		if (++i != b->end())
 		{
--- a/xdata/src/common/csv/InfoSpaceSerializer.cc
+++ b/xdata/src/common/csv/InfoSpaceSerializer.cc
@@ -30,7 +30,7 @@
 		dynamic_cast<xdata::InfoSpace*>(serializable)->fireItemValueRetrieve((*i).first, this );
 
 		xdata::Serializable* var = (*i).second;		
-		dynamic_cast<xdata::csv::Serializer*>(serializer)->exportAll(var, f);
+		dynamic_cast<xdata::csv::Serializer*>(serializer)->exportAll(var, bool(f));
 	}
 }
 
--- a/xdata/src/common/csv/VectorSerializer.cc
+++ b/xdata/src/common/csv/VectorSerializer.cc
@@ -26,7 +26,7 @@
 	unsigned int i = 0;
 	while (i < v->elements())
 	{
-		dynamic_cast<xdata::csv::Serializer*>(serializer)->exportAll(v->elementAt(i), f);
+		dynamic_cast<xdata::csv::Serializer*>(serializer)->exportAll(v->elementAt(i), bool(f));
 		
 		if (++i < v->elements())
 		{
